@import "../../../styles/variables.scss";

.header {
	top: var(--header-position); //REQ!
	left: 0; //REQ!
	z-index: 51; //REQ!
	// width: 100%; //REQ!
	width: 100vw; // test scroll lock
	// max-width: $page-max-width+px; //REQ! set it same as body max-width
	// font-size: 0; // prevent random margins... careful with 'em'
	// Set 'position' inside these subclasses because it depends on script options. But it is unlikely to change default 'positions' values. Try to work with it first.
	&_static {
		position: absolute; //REQ! one
	}
	&_fixed {
		position: fixed; //REQ! one
	}
	&_active {}
	// classes for 'sharing mode', e.g. if 'modal' calls header and uses its close button
	&_shared {}
	&_shared-z {
		z-index: 501;
	}
	box-shadow: 0 0 5px 0 transparent;
	transition: box-shadow $timer-header-compact;
	&_compact {
		box-shadow: 0 0 5px 0 var(--color06);
	}
	// &_compact .logo__link { // compact mode test
	// 	@media (min-width: $media-mxl+1+px) {font-size: 20px;}
	// }
}

.menuTurnoffArea {
	position: fixed; //REQ!
	top: 0; //REQ!
	left: 0; //REQ!
	z-index: -10; //REQ!
	width: 100vw; //REQ!
	height: 100vh; //REQ!
	background-color: rgba(0, 0, 0, 0.5);
	backdrop-filter: blur(2px);
	cursor: pointer; // for customer test
	opacity: 0; //REQ!
	visibility: hidden; //REQ!
	transition: opacity $timer-menu, visibility $timer-menu;
	.header_active & {
		opacity: 1;
		visibility: visible;
	}
}

.level {
	position: relative; //REQ! for submenu positioning
	padding: 36px 0 16px 0;
	padding-right: var(--scrollbar-width); // test scroll lock
	background-color: var(--color01);
	@media (min-width: $media-ts+1+px) {
		transition: padding-top $timer-header-compact;
		.header_compact & {
			padding-top: calc(36px - var(--compact-mode-padding-reduced));
		}
	}
	@media (max-width: $media-ts+px) {
		padding: 14px 0 10px 0;
		padding-right: var(--scrollbar-width); // test scroll lock
	}
	@media (max-width: $media-ml+px) {
		padding: 2px 0 6px 0;
		padding-right: var(--scrollbar-width); // test scroll lock
	}
}
.container {
	background-color: var(--color01);
	@media (max-width: $media-ml+px) {
		flex-wrap: wrap;
	}
}

.logo {
	font-size: 20px;
	margin-right: 19px;
	@media (max-width: $media-ml+px) {
		flex: 1 1 100%;
		text-align: center;
	}
}
.header .divider {
	margin-left: 19px;
	@media (max-width: $media-ts+px) {
		margin-left: 10px;
	}
	@media (max-width: $media-ml+px) {
		display: none;
	}
}
.account {
	margin-top: 5px;
	display: flex;
	align-items: center;
	& > * {
		margin-left: 28px;
		@media (max-width: $media-ts+px) {
			margin-left: resize-multiplier(28, $media-ts, 1.2);
		}
		@media (max-width: $media-ml+px) {
			margin-left: 0;
		}
	}
	@media (max-width: $media-ml+px) {
		margin-top: 0;
		flex-grow: 1;
		justify-content: space-between;
}
}
.header .accountButton {
	width: 112px;
	height: 39px;
	border-radius: 28px;
	@media (max-width: $media-ml+px) {
		width: 85px;
		height: 35px;
	}
}
.printAddress, .printAddressQr {display: none;} //REQ!

.buttonBox {
	flex-shrink: 0;
	position: relative; //REQ!
	width: 60px;
	height: 40px;
	@media (min-width: $media-ts+1+px) {
		display: none; //REQ!
	}
	@media (max-width: $media-ml+px) {
		width: 34px;
		height: 34px;
		margin-right: 5px;
	}
}
.menuOpenBtn,
.menuCloseBtn {
	position: absolute; //REQ!
	top:0; //REQ!
	left: 0; //REQ!
	width: 100%; //REQ! if in button-box
	height: 100%; //REQ! if in button-box
	display: flex; //REQ!
	justify-content: center; //REQ!
	align-items: center; //REQ!
	cursor: pointer; // for customer test
	user-select: none; //REQ!
	transition: opacity $timer-menu, visibility $timer-menu;
	background-color: var(--color01);
	fill: var(--color02);
	svg {
		width: 24px;
		height: 24px;
	}
	@media (min-width: $media-ts+1+px) {
		display: none; //REQ!
	}
	@media (max-width: $media-ml+px) {
		top: -5px;
		left: -10px;
		width: calc(100% + 10px);
		height: calc(100% + 10px);
	}
}
.menuOpenBtn {
	// background-color: limegreen;
	visibility: visible;
	opacity: 1;
	stroke: var(--color02);
}
.menuCloseBtn {
	// background-color: crimson;
	visibility: hidden;
	opacity: 0;
	.header_active &, .header_shared & {
		visibility: visible;
		opacity: 1;
	}
}

.menuHideWrapper {
	flex-grow: 1;
	display: flex;
	justify-content: flex-end;
	// align-items: center;
	position: relative;
	background-color: var(--color01);
	@media (max-width: $media-ts+px) {
		position: fixed; //REQ!
		z-index: -1;
		height: 50px;
		top: calc(var(--header-height) + var(--header-offset) - 53px); //REQ! if below header
		// display: flex; //REQ! for mobile menu stretch
	}
	@media (max-width: $media-ts+px) {
		position: absolute;
		left: 0;
		width: 100%;
		justify-content: center;
		transition: top $timer-menu;
		.header_active & {
			top: calc(var(--header-height) + var(--header-offset));
		}
	}
	@media (max-width: $media-mxl+px) {
		position: fixed;
		top: calc(var(--header-height) + var(--header-offset)); //REQ! if below header
		left: -283px; // width + 1px
		width: 282px;
		height: calc(var(--window-height) - var(--header-position) - var(--header-height) - 17px);
		max-height: 482px;
		transition: left $timer-menu;
		border-radius: 0px 16px 16px 0px;
		flex-direction: column;
		justify-content: flex-start;
		overflow-x: hidden;
		overflow-y: auto;
		scrollbar-width: none;
		// scrollbar-color: var(--color05) transparent;
		&::-webkit-scrollbar {
			width: 0px;
		}
		// &::-webkit-scrollbar-thumb {
		// 	background: var(--color05);
		// }
		// &::-webkit-scrollbar-track {
		// 	background: transparent;
		// }
		.header_active & {
			left: 0;
		}
		@media (max-height: $media-m+px) {
			height: calc(var(--window-height) - var(--header-position) - var(--header-height));
		}
	}
	// next are REQ! for 'hidingHeader' js
	&.hideOnViewChangeStageL {
		@media (max-width: $media-ts+px) {
			// display: none !important;
			opacity: 0;
		}
	}
	&.hideOnViewChangeStageM {
		@media (min-width: $media-ts+1+px), (max-width: $media-mxl+px) {
			// display: none !important;
			opacity: 0;
		}
	}
	&.hideOnViewChangeStageS {
		@media (min-width: $media-mxl+1+px) {
			// display: none !important;
			opacity: 0;
		}
	}
	//
}

.menu {
	height: 100%;
	display: flex;
	align-items: center;
	background-color: var(--color01);
	@media (min-width: $media-ts+1+px) {
		margin-top: 5px;
	}
	@media (max-width: $media-mxl+px) {
		height: fit-content; //REQ! for mobile menu stretch
		max-height: 260px;
		// padding: 10px;
		// Mobile landscape screen apadtive
		@media (max-height: $media-m+px) {
			padding-top: 0;
			padding-bottom: 0;
		}
	}
	&_shrink {
		@media (max-width: $media-tl+px) and ((min-width: $media-ts+1+px)) {
			width: 100%;
			justify-content: center;
			// background-color: yellow;
		}
	}
}
.menuItems {
	display: flex;
	// justify-content: space-between;
	align-items: center;
	@media (max-width: $media-mxl+px) {
		// height: 100%; //REQ! for mobile menu stretch
		flex-direction: column;
		width: 100%;
		align-items: flex-start;
	}
}
.menuItem {
	flex-shrink: 1;
	margin-left: 30px;
	// height: 30px;
	display: flex;
	align-items: center;
	@media (max-width: $media-tl+px) and (min-width: $media-ts+1+px) {
		margin-left: resize-multiplier(30, $media-tl, 4);
	}
	@media (min-width: $media-mxl+1+px) {
		position: relative;
	}
	@media (max-width: $media-mxl+px) {
		margin-left: 0;
		width: 100%;
		border-bottom: solid 1px var(--color05);
	}
}
.menuLink {
	@include text-max-lines(2);
	flex-shrink: 1;
	position: relative;
	z-index: 2;
	display: inline-flex; //REQ!
	justify-content: center;
	align-items: center;
	height: 39px;
	// line-height: 39px;
	padding: 0 9px;
	font-size: 16px;
	// white-space: nowrap;
	text-align: center;
	transition: all $timer-hover;
	// background-color: yellowgreen;
	&:hover {
		color: var(--color03);
	}
	.menu_shrink & {
		@media (max-width: $media-tl+px) and ((min-width: $media-ts+1+px)) {
			width: min-content;
		}
	}
	@media (max-width: $media-mxl+px) {
		width: 100%;
		height: 51px;
		justify-content: flex-start;
		// line-height: 51px;
			// margin-left: 20px;
		padding: 0 20px;
	}
}

// .thisPage {
// 	pointer-events: none;
// 	background-color: peachpuff;
// }
